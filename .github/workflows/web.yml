name: Web Application CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - 'next.config.mjs'
      - 'tailwind.config.ts'
      - 'tsconfig.json'
      - '.github/workflows/web.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - 'next.config.mjs'
      - 'tailwind.config.ts'
      - 'tsconfig.json'
      - '.github/workflows/web.yml'

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npm run type-check

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate and build application
        run: npm run build:validate
        env:
          NEXT_PUBLIC_WORLD_APP_ID: ${{ secrets.NEXT_PUBLIC_WORLD_APP_ID }}
          NEXT_PUBLIC_WORLD_ID_ACTION_ID: ${{ secrets.NEXT_PUBLIC_WORLD_ID_ACTION_ID }}
          NEXT_PUBLIC_ALCHEMY_API_KEY: ${{ secrets.NEXT_PUBLIC_ALCHEMY_API_KEY }}
          NEXT_PUBLIC_WORLDCHAIN_RPC_URL: ${{ secrets.NEXT_PUBLIC_WORLDCHAIN_RPC_URL }}
          NEXT_PUBLIC_WORLDCHAIN_SEPOLIA_RPC_URL: ${{ secrets.NEXT_PUBLIC_WORLDCHAIN_SEPOLIA_RPC_URL }}
          NEXT_PUBLIC_ENVIRONMENT: production
          NEXT_PUBLIC_WORLDID_ENABLED: true
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: |
            .next/
            public/
          retention-days: 1

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true

  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install @next/bundle-analyzer
        run: npm install --save-dev @next/bundle-analyzer

      - name: Build with bundle analysis
        run: |
          ANALYZE=true npm run build
        env:
          NEXT_PUBLIC_ENVIRONMENT: production

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v3
        with:
          name: bundle-analysis
          path: |
            .next/analyze/
          retention-days: 7

  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: Run Lighthouse CI
        run: |
          npm start &
          sleep 10
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
        env:
          NEXT_PUBLIC_WORLD_APP_ID: ${{ secrets.NEXT_PUBLIC_WORLD_APP_ID }}
          NEXT_PUBLIC_WORLD_ID_ACTION_ID: ${{ secrets.NEXT_PUBLIC_WORLD_ID_ACTION_ID }}
          NEXT_PUBLIC_ALCHEMY_API_KEY: ${{ secrets.NEXT_PUBLIC_ALCHEMY_API_KEY }}
          NEXT_PUBLIC_WORLDCHAIN_RPC_URL: ${{ secrets.NEXT_PUBLIC_WORLDCHAIN_RPC_URL }}
          NEXT_PUBLIC_WORLDCHAIN_SEPOLIA_RPC_URL: ${{ secrets.NEXT_PUBLIC_WORLDCHAIN_SEPOLIA_RPC_URL }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}